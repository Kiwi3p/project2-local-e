
<div class="profile-container">
    <section class="profile-information dark-background">
          <article class="container profile-info map">
            <div class="map-search">
              <button type="submit" onclick="listAllFavorites()">Show Favorites</button>
              <form action="/profile">
              <button type="submit">Show Markets Near Me</button>
              </form>
            <form>
              <label>
                <input type="text" name="location" placeholder="Enter location" required>
              </label>
            </form>
            <button type="submit" onclick="getCurrentLocation()">Get current location</button>
            </div>
            <div id="map"></div>
          </article>
          <article class="container profile-info markets">
            <h3>Farmers Markets</h3>
            <div style="{ overflow: scroll; display: block; }" id="list-markets"></div>
          </article>
    </section>
</div>
<input type="hidden" id="storeLocationInput" value={{thisLocation}}>
<input type="hidden" id="favoritesArray" value="{{favorites}}">

<script>

  
  //ONLOAD 
  let map;
  function initMap() {
    let savedLocation = JSON.parse(document.getElementById('storeLocationInput').value);
    map = new google.maps.Map(document.getElementById("map"), {
      zoom: 13,
      center: savedLocation
    });
    searchPlaces();
  } 
  function searchPlaces() {
      let savedLocation = JSON.parse(document.getElementById('storeLocationInput').value);
      let request = {
        location: savedLocation,
        query: ['market', 'bio']

      }
      let service = new google.maps.places.PlacesService(map);
      service.textSearch(request, (results, status) => {
        if (status === google.maps.places.PlacesServiceStatus.OK) {
          for (let i = 0; i < results.length; i++) {
            let data = results;
            let name = results[i].name;
            let address = results[i].formatted_address;
            let place_id = results[i].place_id;
            let rating = results[i].rating;
           let lat = results[i].geometry.location.lat();
           let lng = results[i].geometry.location.lng();
            setMarker({ lat, lng }, name, address, place_id, rating, lat, lng);
            listAllLocation(name, address, place_id, rating);
          }
          
        }
      });
    }

  function setMarker(marker, name, address, place_id, rating, lat, lng) {
   let favoritesArray = JSON.parse(document.getElementById('favoritesArray').value);

    let text;
    favoritesArray.forEach(favorite => {
      if(favorite === place_id) {
        text = 'Already a favorite'
      } else {
        text = 'Add to favorites'
      }
    })
    let customMarker = new google.maps.Marker({
      position: marker,
      map: map
    });
    
    let markerAttributes =`${name}<br/> 
    ${address}<br/>
    Rating: ${rating}/5
    <form action='/favorites/create' method='POST'>
      <input type='hidden' name='name' value='${name}' >
      <input type='hidden' name='address' value='${address}' >
      <input type='hidden' name='place_id' value='${place_id}' >
      <input type='hidden' name='rating' value='${rating}' >
      <input type='hidden' name='lat' value='${lat}' >
      <input type='hidden' name='lng' value='${lng}' >
      <button type='submit' class="submit btn-fav" >${text}</button>
    </form>
      `;
    
    const infowindow = new google.maps.InfoWindow({
      content: markerAttributes,
    });
    
    customMarker.addListener("click", () => {
      infowindow.open(map, customMarker);
    });
  }


  function getCurrentLocation() {
  navigator.geolocation.getCurrentPosition((position) => {
  const pos = {
  lat: position.coords.latitude,
  lng: position.coords.longitude
  }
  map.setCenter(pos);
  map.setZoom(17);
  //showMarkers(markers);
  });
  }   
  
  let results = '';
  function listAllLocation(name, address, place_id, rating) {
          results+= `
          <div class="market-info" id="market-info">
              <div class="market-name">Market Name: ${name}</div>
              <div class="market-address">Address: ${address}</div>
              <div class="market-rating">Rating: ${rating}/5</div>
              <form action='/favorites/create' method='POST'>
                <input type='hidden' name='name' value='${name}' >
                <input type='hidden' name='address' value='${address}' >
                <input type='hidden' name='place_id' value='${place_id}' >
                <input type='hidden' name='rating' value='${rating}' >
                <button type='submit' class="submit btn-fav" >Add to Favorites</button>
              </form>
              <hr>
          </div>
          `
 
    document.getElementById('list-markets').innerHTML = results;
  }
let dbResults
let myFavorites = '';
function listAllFavorites(name, address, place_id) {
   let listDiv = document.getElementById('list-markets');
   listDiv.innerHTML = '';
   getFavorites()
   .then(() => {
     console.log(dbResults);
   dbResults.forEach((favorites) => {
      myFavorites += `<div>
                <h3>${favorites.name}</h3>
                <h4>${favorites.address}</h4>
                <!-- we can only have post requests on forms -->
                <form action="/favorites/${favorites._id}/delete" method="POST">
                  <button type="submit">Delete</button>
                </form>
              </div>`
   })
   /*myFavorites = `
            <h3>Favorite Shops!</h3>
            {{#each favorites}}
              <div>
                <h3>{{name}}</h3>
                <h4>{{address}}</h4>
                <a href="/favorites/{{_id}}">See details</a>
                <!-- we can only have post requests on forms -->
                <form action="/favorites/{{_id}}/delete" method="POST">
                  <button type="submit">Delete</button>
                </form>
              </div>
            {{/each}}
          ` */
   listDiv.innerHTML = myFavorites;
   console.log('testing button') ;  
   })   
}

let list1 = document.getElementById('fav-market');
function hideList() {
  if (list1.style.display === 'block') {
    list1.style.display = 'none'
  }
}

function getFavorites() {
  return axios
    .get('/profile/favorites')
    .then((resultFromDB) => {
      console.log(resultFromDB);
      dbResults = resultFromDB.data.favorites;
      //console.log(result);
      //return result

    })
}

function showMarkers(markers) {  //ARRAY
    markers.forEach((marker) => {
      setMarker(marker);
    })
  }
  
</script>
